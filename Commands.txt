// Outputting text to the console
console.log("Hello, World!");
// Single line comment

/*
Multi-line 
comment */

three primary data types: Numbers, Strings, and Booleans.

let age = 20; // variables with let can be reassigned
const year = 1900; // A constant. Its value can't change.

let flowerJar = null;         // we have an empty flower jar
console.log(flowerJar);       // outputs: null

let candyJar;                 // we have a label for a candy jar, but no actual jar
console.log(candyJar);        // outputs: undefined

Equality and Strict Equality Operators (== and ===): The double equals operator (==) checks equality in value, whereas the triple equals operator (===) checks equality in both value and type.

if (isWeekend && isSunny) {
  console.log("It's the weekend and it's sunny, let's go to the park!");
} else if (isHoliday && !isSunny) {
  console.log("It's a holiday but not sunny, let's go to the museum."); 
} else if (isWeekend || isHoliday) {
  console.log("It's either weekend or a holiday, let's decide based on the weather.");
} else {
  console.log("It's neither the weekend nor a holiday, let's stay at home.");
}

Function define
function sayHello(name) {
  // code inside here runs when the function is called
}
start: function(name) {
    return 'Engine started!';
}

Function call
sayHello("Subham"); 

Global variable can be accessed everywhere even inside functions 

Arrays:-
let variedArray = ["Hello", 25, true]; // The `variedArray` contains three different types of data.

arrays are mutable that is reassignment possible

 arr.length -- fetches length of arrays
 arr.push("Hello);
 arr.pop();

let car = {
    color: 'red',
    make: 'Toyota',
    model: 'Corolla',
}; //object car 

car.color = 'blue'; // modifying color property
car.roofRack = true; // adding roofRack property
delete car.roofRack; // removing roofRack property  

let house = {
    'number of rooms': 4,
    1: 'one',
};

let rooms = house['number of rooms']; // equals 4
let one = house[1]; // equals 'one'

add a function inside an object 
user.introduce = function() { // a new method is added
    console.log("Hi, I am " + this.name);
}

Example:-
let car = {
    brand: 'Tesla',
    model: 'Model 3',
    drive: function(){
        return "Vroom vroom";
    }
};

// Changing the model and adding a new property.
car.color = 'white';
car.model = 'Model Y';

// TODO: Call the 'drive' method here and print the result
let info = car.drive();
console.log(info);

